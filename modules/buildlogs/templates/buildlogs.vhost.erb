# ************************************
# Managed by Puppet
# ************************************

NameVirtualHost <%= @vhost_name %>:<%= @port %>
<VirtualHost <%= @vhost_name %>:<%= @port %>>
  ServerName <%= @srvname %>
<% if @serveraliases.is_a? Array -%>
<% @serveraliases.each do |name| -%><%= " ServerAlias #{name}\n" %><% end -%>
<% elsif @serveraliases != '' -%>
<%= " ServerAlias #{@serveraliases}" %>
<% end -%>
  DocumentRoot <%= @docroot %>

  <Directory <%= @docroot %>>
    Options <%= @options %>
    AllowOverride None
    Order allow,deny
    allow from all
  </Directory>

  RewriteEngine On
  # rewrite txt.gz & console.html[.gz] files to map to our internal htmlify
  # wsgi app 
  # PT, Pass-through:  to come back around and get picked up by the 
  #                    WSGIScriptAlias
  # NS, No-subrequest: on coming back through, mod-autoindex may have added
  #                    index.html which would match the !-f condition. We
  #                    therefore ensure the rewrite doesn't trigger by
  #                    disallowing subrequests.
  RewriteRule ^/(.*\.txt\.gz)$ /htmlify/$1 [QSA,L,PT,NS]
  RewriteRule ^/(.*console\.html(\.gz)?)$ /htmlify/$1 [QSA,L,PT,NS]

  # Check if the request exists as a file, directory or symbolic link
  # If not, write the request to htmlify to see if we can fetch from swift
  RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f 
  RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d 
  RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-l 
  RewriteCond %{REQUEST_FILENAME} !^/icon
  RewriteRule ^/(.*)$ /htmlify/$1 [QSA,L,PT,NS]

  WSGIScriptAlias /htmlify /usr/local/lib/python2.7/dist-packages/os_loganalyze/wsgi.py


  ErrorLog /var/log/apache2/<%= @name %>_error.log
  LogLevel warn
  CustomLog /var/log/apache2/<%= @name %>_access.log combined
  ServerSignature Off
</VirtualHost>

